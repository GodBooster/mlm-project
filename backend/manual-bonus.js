import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// Bonus amounts for each package
const PACKAGE_BONUSES = {
  5: 50,   // Member - $50 bonus
  6: 100,  // Adept - $100 bonus
  7: 200,  // Visionary - $200 bonus
  8: 500,  // Elite - $500 bonus
  9: 1000  // Fortune - $1000 bonus
}

async function awardPackageBonuses() {
  try {
    console.log('üéÅ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ –ø–æ –ø–∞–∫–µ—Ç–∞–º...\n')

    // Get all active investments
    const activeInvestments = await prisma.investment.findMany({
      where: {
        isActive: true,
        endDate: {
          gte: new Date()
        }
      },
      include: {
        user: true,
        package: true
      }
    })

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${activeInvestments.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π\n`)

    let totalBonusesAwarded = 0
    let usersUpdated = 0

    for (const investment of activeInvestments) {
      const packageId = investment.packageId
      const bonusAmount = PACKAGE_BONUSES[packageId]

      if (bonusAmount) {
        console.log(`üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${investment.user.username}`)
        console.log(`   –ü–∞–∫–µ—Ç: ${investment.package.name} (ID: ${packageId})`)
        console.log(`   –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: $${investment.amount}`)
        console.log(`   –ë–æ–Ω—É—Å: $${bonusAmount}`)

        // Update user bonus
        await prisma.user.update({
          where: { id: investment.userId },
          data: {
            bonus: {
              increment: bonusAmount
            }
          }
        })

        // Create transaction record
        await prisma.transaction.create({
          data: {
            userId: investment.userId,
            investmentId: investment.id,
            type: 'BONUS',
            amount: bonusAmount,
            description: `Package bonus for ${investment.package.name}`,
            status: 'COMPLETED'
          }
        })

        totalBonusesAwarded += bonusAmount
        usersUpdated++
        console.log(`   ‚úÖ –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª–µ–Ω!\n`)
      }
    }

    console.log(`üéâ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`)
    console.log(`üìà –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersUpdated}`)
    console.log(`üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–æ–≤: $${totalBonusesAwarded}`)

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Run the bonus awarding
awardPackageBonuses() 