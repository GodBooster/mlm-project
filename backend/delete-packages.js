import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function deletePackages() {
  try {
    console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...\n')

    const packagesToDelete = [
      'Starter Package',
      'Premium Package', 
      'VIP Package',
      'Elite Package'
    ]

    for (const packageName of packagesToDelete) {
      const package_ = await prisma.investmentPackage.findFirst({
        where: { name: packageName }
      })

      if (package_) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
        const relatedInvestments = await prisma.investment.findMany({
          where: { packageId: package_.id }
        })

        if (relatedInvestments.length > 0) {
          console.log(`‚ö†Ô∏è  –ü–∞–∫–µ—Ç "${packageName}" –∏–º–µ–µ—Ç ${relatedInvestments.length} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏...`)
          
          // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
          for (const investment of relatedInvestments) {
            await prisma.transaction.deleteMany({
              where: { investmentId: investment.id }
            })
          }
          
          // –£–¥–∞–ª—è–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
          await prisma.investment.deleteMany({
            where: { packageId: package_.id }
          })
        }

        // –£–¥–∞–ª—è–µ–º –ø–∞–∫–µ—Ç
        await prisma.investmentPackage.delete({
          where: { id: package_.id }
        })
        
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –ø–∞–∫–µ—Ç: ${packageName}`)
      } else {
        console.log(`‚ö†Ô∏è  –ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${packageName}`)
      }
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞–∫–µ—Ç—ã
    const remainingPackages = await prisma.investmentPackage.findMany()
    console.log('\nüì¶ –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞–∫–µ—Ç—ã:')
    remainingPackages.forEach(pkg => {
      console.log(`   - ${pkg.name} (ID: ${pkg.id})`)
    })

    console.log('\n‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error)
  } finally {
    await prisma.$disconnect()
  }
}

deletePackages() 