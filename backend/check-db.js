import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkDatabase() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL...\n')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userCount = await prisma.user.count()
    console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${userCount}`)

    if (userCount > 0) {
      const users = await prisma.user.findMany({
        select: {
          id: true,
          email: true,
          username: true,
          balance: true,
          rank: true,
          referralCode: true,
          createdAt: true
        }
      })
      console.log('üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:')
      users.forEach(user => {
        console.log(`   ID: ${user.id}, Email: ${user.email}, Username: ${user.username}, Balance: ${user.balance}, Rank: ${user.rank}`)
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    const packageCount = await prisma.investmentPackage.count()
    console.log(`\nüì¶ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: ${packageCount}`)

    if (packageCount > 0) {
      const packages = await prisma.investmentPackage.findMany({
        select: {
          id: true,
          name: true,
          minAmount: true,
          maxAmount: true,
          monthlyYield: true,
          isActive: true
        }
      })
      console.log('üìã –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤:')
      packages.forEach(pkg => {
        console.log(`   ID: ${pkg.id}, Name: ${pkg.name}, Yield: ${pkg.monthlyYield}%, Active: ${pkg.isActive}`)
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
    const investmentCount = await prisma.investment.count()
    console.log(`\nüí∞ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ${investmentCount}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const transactionCount = await prisma.transaction.count()
    console.log(`üìà –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactionCount}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const transactionTypes = await prisma.transaction.groupBy({
      by: ['type'],
      _count: {
        type: true
      }
    })
    console.log('\nüìä –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:')
    transactionTypes.forEach(type => {
      console.log(`   ${type.type}: ${type._count.type}`)
    })

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    console.log('üåê –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL')
    console.log('üîó URL: postgresql://mlmuser:securepass@localhost:5432/mlmdb')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkDatabase() 