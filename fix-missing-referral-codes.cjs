const { PrismaClient } = require('@prisma/client');
const crypto = require('crypto');

const prisma = new PrismaClient();

function generateReferralCode() {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 6-—Å–∏–º–≤–æ–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä
  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  let result = '';
  for (let i = 0; i < 6; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return result;
}

async function fixMissingReferralCodes() {
  try {
    console.log('üîß Fixing missing referral codes...');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ referral –∫–æ–¥–æ–≤
    const usersWithoutReferralCode = await prisma.user.findMany({
      where: {
        OR: [
          { referralCode: null },
          { referralCode: '' }
        ]
      },
      select: {
        id: true,
        email: true,
        referralCode: true
      }
    });
    
    console.log(`Found ${usersWithoutReferralCode.length} users without referral codes`);
    
    if (usersWithoutReferralCode.length === 0) {
      console.log('‚úÖ All users have referral codes!');
      return;
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const user of usersWithoutReferralCode) {
      console.log(`\nüë§ User ${user.id} (${user.email}) - missing referral code`);
      
      let newReferralCode;
      let isUnique = false;
      let attempts = 0;
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥
      while (!isUnique && attempts < 10) {
        newReferralCode = generateReferralCode();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        const existingUser = await prisma.user.findUnique({
          where: { referralCode: newReferralCode }
        });
        
        if (!existingUser) {
          isUnique = true;
        } else {
          attempts++;
        }
      }
      
      if (!isUnique) {
        console.log(`‚ùå Failed to generate unique referral code for user ${user.id}`);
        continue;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await prisma.user.update({
        where: { id: user.id },
        data: { referralCode: newReferralCode }
      });
      
      console.log(`‚úÖ Generated referral code: ${newReferralCode}`);
    }
    
    console.log('\nüéâ Missing referral codes fixed!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const finalCheck = await prisma.user.findMany({
      where: {
        OR: [
          { referralCode: null },
          { referralCode: '' }
        ]
      }
    });
    
    console.log(`üìä Final check: ${finalCheck.length} users still without referral codes`);
    
  } catch (error) {
    console.error('‚ùå Error fixing missing referral codes:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixMissingReferralCodes();
